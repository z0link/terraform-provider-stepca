name: Release

on:
  push:
    branches: [ '**' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: false

permissions:
  contents: write

env:
  PUBLISH_TO_TERRAFORM_REGISTRY: false
  GITHUB_TOKEN: ${{ secrets.STEP_RELEASE_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect provider code changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            provider:
              - '**/*.go'
              - go.mod
              - go.sum
              - Makefile
              - scripts/**
      - uses: actions/setup-go@v5
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        with:
          go-version-file: go.mod
      - name: Install step dependencies
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          curl -L https://github.com/smallstep/cli/releases/latest/download/step-cli_amd64.deb -o step-cli.deb
          sudo dpkg -i step-cli.deb
          curl -L https://github.com/smallstep/certificates/releases/latest/download/step-ca_amd64.deb -o step-ca.deb
          sudo dpkg -i step-ca.deb
      - name: Set release version
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          COMMIT_TAG=$(git tag --points-at HEAD | head -n 1)
          if [ -z "$COMMIT_TAG" ]; then
            COMMIT_TAG=$(git rev-parse --short=6 HEAD)
          fi
          STEP_VERSION=$(step version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=stepca-${STEP_VERSION}-${COMMIT_TAG}" >> $GITHUB_ENV
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Build and package provider
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          make package VERSION=$VERSION
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Test packaged provider
        run: |
          ./scripts/test_release.sh $VERSION
      - name: Publish to Terraform Registry
        if: (github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch') && env.PUBLISH_TO_TERRAFORM_REGISTRY == 'true'
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
        run: |
          terraform providers push \
            --os=linux --arch=amd64 \
            --version $VERSION \
            terraform-provider-stepca
      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Test release ${{ env.VERSION }}
          draft: false
          prerelease: true
          token: ${{ secrets.STEP_RELEASE_TOKEN }}
      - name: Upload provider asset
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.STEP_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/terraform-provider-stepca_${{ env.VERSION }}_linux_amd64.zip
          asset_name: terraform-provider-stepca_${{ env.VERSION }}_linux_amd64.zip
          asset_content_type: application/zip
