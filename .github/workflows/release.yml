name: Release

on:
  push:
    branches: [ '**' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: false

permissions:
  contents: write

env:
  PUBLISH_TO_TERRAFORM_REGISTRY: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect provider code changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            provider:
              - '**/*.go'
              - go.mod
              - go.sum
              - Makefile
              - scripts/**
      - uses: actions/setup-go@v5
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        with:
          go-version-file: go.mod
      - name: Set release version
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Build and package provider
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          make package VERSION=$VERSION
      - name: Publish to Terraform Registry
        if: (github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch') && env.PUBLISH_TO_TERRAFORM_REGISTRY == 'true'
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
        run: |
          terraform providers push \
            --os=linux --arch=amd64 \
            --version $VERSION \
            terraform-provider-stepca
      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Test release ${{ env.VERSION }}
          draft: false
          prerelease: true
      - name: Upload provider asset
        if: github.ref == 'refs/heads/main' || steps.changes.outputs.provider == 'true' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/terraform-provider-stepca_${{ env.VERSION }}_linux_amd64.zip
          asset_name: terraform-provider-stepca_${{ env.VERSION }}_linux_amd64.zip
          asset_content_type: application/zip
